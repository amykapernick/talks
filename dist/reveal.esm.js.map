{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.6 - Snugly resizes text to fit its parent container\n * Copyright (c) 2022 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 1600,\n\theight: 900,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: false,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: false,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: false,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'speaker',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: true,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: true,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: 'focused',\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: false,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: true,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'fast', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}\n","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.4.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","undefined","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","destroy","colorToRgb","color","hex3","r","parseInt","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","indexh","indexv","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","name","hash","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","Deck","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","_ref","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","enqueuedAPICalls","_len","_key","deck"],"mappings":"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"}